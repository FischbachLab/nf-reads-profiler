manifest {
  name = 'nf-reads-profiler'
  author = 'Sunit Jain'
  homePage = 'https://github.com/fischbachlab/nf-profile-reads'
  description = 'Metaphlan and HUMANn'
  mainScript = 'main.nf'
  defaultBranch = 'main'
  version = '0.0.1'
}

includeConfig "$projectDir/conf/aws_batch.config"

params {

    /* 	Containers
     --------------------------------*/
    docker_container_biobakery = "458432034220.dkr.ecr.us-west-2.amazonaws.com/biobakery/workflows:maf-20221028-a1"
    docker_container_multiqc = "quay.io/biocontainers/multiqc:1.11--pyhdfd78af_0"
    docker_container_qiime2 = "qiime2/core:2020.8"
    docker_container_bbmap = "quay.io/biocontainers/bbmap:38.87--h1296035_0"
	
    /* 	Execution flow parameters
     --------------------------------*/	
	
    config_profile_name        = 'Default profile'
    config_profile_description = 'nf-profile-reads default workflow'
		
    /* 	Execution flow parameters
     --------------------------------*/		

    singleEnd = false  //Whether we the input reads are single or paired-end 
    mergeReads = false
    project="00_TEST"
    prefix="output"
	  outdir="s3://genomics-workflow-core/Results/reads-profiler"
    rna = false       // Is the input data RNA? Requires "taxonomic_profile" to be set as well.
    taxonomic_profile = null    // <S3Path> Use in case metaphlan results are already available.
    
				
    /* 	Processing parameters
     --------------------------------*/
   
    //BowTie2 databases for MetaPhlAn
    metaphlan_index="mpa_v30_CHOCOPhlAn_201901"
    metaphlan_db="/mnt/efs/databases/Biobakery/Metaphlan/v3.0"
    bt2options="very-sensitive" //presets options for BowTie2
  
    // ChocoPhlAn and UniRef databases for HUMANn analysis
    chocophlan="/mnt/efs/databases/Biobakery/chocophlan"
    uniref="/mnt/efs/databases/Biobakery/uniref"
	
  
    /* 	Initialisation
     --------------------------------*/
  
    //These are used when the analysis is in characterisation mode
    reads1 = ""
    reads2 = ""
    
    //These are used to print version and help
    help = null
    version = null
    
    multiqc_config="$baseDir/conf/multiqc_config.yaml"
}


timeline {
  enabled = false
  overwrite = true
  file = "$params.outdir/$params.project/execution_reports/timeline.html"
}

report {
  enabled = false
  overwrite = true
  file = "$params.outdir/$params.project/execution_reports/report.html"
}

dag {
    enabled = false
    overwrite = true
    file = "$params.outdir/$params.project/execution_reports/pipeline_dag.html"
}

process 
{
  maxRetries = 5
	executor = 'awsbatch'
	queue = 'default-maf-pipelines'
	cleanup = true
  cache = false
	withName: merge_paired_end_cleaned 
	{
		time =  '4h'
		cpus = 4
		memory = '32 GB'
    errorStrategy = 'retry'
	}
	
	withName: profile_taxa 
	{
		time =  '4h'
		cpus = 4
		memory = '32 GB'  
    errorStrategy = 'retry'
	}

	withName: profile_function 
	{
		time =  '48h'
		cpus = 16
		memory = '120 GB'  
    errorStrategy = 'retry'
	}	

	withName: log
	{
		time =  '30m'
		cpus = 2
		memory = '8 GB'  
		errorStrategy = 'ignore'
	}		
}
